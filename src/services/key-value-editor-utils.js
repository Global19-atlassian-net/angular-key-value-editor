(function() {
  'use strict';

  // simple set of utils to share
  angular
    .module('key-value-editor')
    .factory('keyValueEditorUtils', [
      function() {
        // simple reduce fn
        var reduce = function(arr, fn, memo) {
          for(var i = 0; i < arr.length; i++) {
            memo = fn(memo, arr[i], i, arr);
          }
          return memo;
        };

        // expects a flat array, removes empty arrays.
        // is used to eliminate extra empty pairs generated by user
        var compact = function(list) {
            return reduce(
                    list,
                    function(memo, next) {
                      if(next.length) {
                        memo.push(next);
                      }
                      return memo;
                    },
                    []);
        };

        var last = function(entries) {
          return entries && entries[entries.length - 1];
        };
        var first = function(entries) {
          return entries && entries[0];
        };
        // this is a minimal get w/o deep paths
        var get = function(obj, prop) {
          return obj && obj[prop];
        };

        return {
          compact: compact,
          first: first,
          last: last,
          get: get
        };
      }
    ]);
})();
